xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Two Way)")
ggplot(high_v, aes(x = z_mem, y = hits, color=ar)) +
binomial_smooth(aes(y = z_mem,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Positive)")
ggplot(high_v, aes(x = z_mem, y = hits, color=ar)) +
binomial_smooth(aes(y = z_mem,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Positive)")
View(high_v)
ggplot(high_v, aes(x = z_mem, y = hits, color=ar)) +
binomial_smooth(aes(y = z_mem,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Positive)")
ggplot(high_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y =  Memorability_Score,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Positive)")
ggplot(mid_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y = Memorability_Score,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Neutral)")
ggplot(low_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y =  Memorability_Score,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Negative)")
ggplot(high_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y =  Memorability_Score,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Positive)")
p1 <- ggplot(low_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y =  Memorability_Score,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Negative)")
p2 <- ggplot(mid_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y = Memorability_Score,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Neutral)")
p3 <- ggplot(high_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y =  Memorability_Score,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Positive)")
library(patchwork)
combined_plot <- p1 | p2 | p3
# Display the combined plot
combined_plot
library(patchwork)
combined_plot <- (plot1 | plot2) / plot3
combined_plot <- (p1 | p2) / p3
# Display the combined plot
combined_plot
ggplot(pred_data9, aes(x = z_mem, y = hits, color=ar)) +
binomial_smooth(aes(y = Memorability_Score,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Two Way)")
ggplot(pred_data9, aes(x = Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y = Memorability_Score,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Two Way)")
p1
p2
p3
high_v <- pred_data9[pred_data9$val_groups=="(5.95,7.07]",]
mid_v <- pred_data9[pred_data9$val_groups=="(2.98,5.95]",]
low_v <- pred_data9[pred_data9$val_groups=="[1.49,2.98]",]
p1 <- ggplot(low_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y =  pred2,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Negative)")
p2 <- ggplot(mid_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y = pred2,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Neutral)")
p3 <- ggplot(high_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y =  pred2,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Positive)")
p1
pred_data9 <- mem_att_clean9 %>%
mutate(
pred2 = predict(z2, type = "response")
)
ggplot(pred_data9, aes(x = Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y = pred2,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Two Way)")
pred_data9 <- mem_att_clean9 %>%
mutate(
ar = factor(ifelse(mem_att$Mean_Arousal>4.48,"high_ar","low_ar"), labels = c("High Arousal", "Low Arousal"))
)
pred_data9$`val_groups`<- cut_number(pred_data9$Mean_Valence ,3)
z2 <- glmer(hits ~ z_mem * za + (1 | Participant.Private.ID),mem_att,family="binomial",control=glmerControl())
#tab_model(z2, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
pred_data9 <- pred_data9 %>%
mutate(
pred2 = predict(z2, type = "response")
)
ggplot(pred_data9, aes(x = Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y = pred2,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Two Way)")
high_v <- pred_data9[pred_data9$val_groups=="(5.95,7.07]",]
mid_v <- pred_data9[pred_data9$val_groups=="(2.98,5.95]",]
low_v <- pred_data9[pred_data9$val_groups=="[1.49,2.98]",]
p1 <- ggplot(low_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y =  pred2,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Negative)")
p2 <- ggplot(mid_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y = pred2,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Neutral)")
p3 <- ggplot(high_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y =  pred2,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Positive)")
p1
p2
p3
pred_data9 <- mem_att_clean9 %>%
mutate(
ar = factor(ifelse(mem_att$Mean_Arousal>4.48,"high_ar","low_ar"), labels = c("High Arousal", "Low Arousal"))
)
pred_data9$`val_groups`<- cut_number(pred_data9$Mean_Valence ,3)
z2 <- glmer(hits ~ z_mem * za + (1 | Participant.Private.ID),mem_att,family="binomial",control=glmerControl())
#tab_model(z2, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
pred_data9 <- pred_data9 %>%
mutate(
pred2 = predict(z2, type = "response")
)
ggplot(pred_data9, aes(x = Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y = pred2,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Two Way)")
high_v <- pred_data9[pred_data9$val_groups=="(5.95,7.07]",]
mid_v <- pred_data9[pred_data9$val_groups=="(2.98,5.95]",]
low_v <- pred_data9[pred_data9$val_groups=="[1.49,2.98]",]
p1 <- ggplot(low_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y =  pred2,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Negative)")
p2 <- ggplot(mid_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y = pred2,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
ylim(0,1) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Neutral)")
p3 <- ggplot(high_v, aes(x =  Memorability_Score, y = hits, color=ar)) +
binomial_smooth(aes(y =  pred2,  color = ar),se=F, alpha=.8, size= .7) +
theme_ipsum(axis_title_just = "cc", axis_title_size = 12, axis_text_size = 9) +
xlab("Memorability") +
ylab("HIT?") +
scale_color_manual(
values = c("High Arousal" = "gold2", "Low Arousal" = "red4"),
name = "Model Type"
)+
ggtitle("Memorability x Arousal (Positive)")
p1
p2
p3
summary(high_v$Memorability_Score[high_v$val_groups=="High Arousal"])
summary(high_v$Memorability_Score[high_v$ar=="High Arousal"])
summary(high_v$Memorability_Score[high_v$ar=="High Arousal"])
summary(high_v$Memorability_Score[high_v$ar=="Low Arousal"])
t.test(high_v$Memorability_Score[high_v$ar=="High Arousal"],high_v$Memorability_Score[high_v$ar=="Low Arousal"])
summary(high_v$Memorability_Score[high_v$ar=="High Arousal"])
summary(high_v$Memorability_Score[high_v$ar=="Low Arousal"])
t.test(unique(high_v$Memorability_Score[high_v$ar=="High Arousal"]),unique(high_v$Memorability_Score[high_v$ar=="Low Arousal"]))
t.test(unique(pred_data9$Memorability_Score[high_v$ar=="High Arousal"]),unique(pred_data9$Memorability_Score[high_v$ar=="Low Arousal"]))
neutral <- glmer(hits ~ z_mem * zrt * za + (1 + zrt | Participant.Private.ID),mid_v,family="binomial",control=glmerControl())
tab_model(neutral, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
library(sjPlot)
tab_model(model, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
neutral <- glmer(hits ~ z_mem * zrt * za + (1 + zrt | Participant.Private.ID),mid_v,family="binomial",control=glmerControl())
tab_model(neutral, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
positive <- glmer(hits ~ z_mem * zrt * za + (1 + zrt | Participant.Private.ID),high_v,family="binomial",control=glmerControl())
tab_model(positive, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
negative  <- glmer(hits ~ z_mem * zrt * za + (1 + zrt | Participant.Private.ID),low_v,family="binomial",control=glmerControl())
tab_model(  negative , show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
tab_model(neutral, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
tab_model(positive, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
tab_model(  negative , show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
positive <- glm(hits ~ z_mem *  za ,high_v,family="binomial",control=glmerControl())
positive <- glm(hits ~ z_mem *  za ,high_v,family="binomial",control=glmControl())
positive <- glm(hits ~ z_mem *  za ,high_v,family="binomial")
tab_model(positive, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
neutral <- glm(hits ~ z_mem *  za ,mid_v,family="binomial",control=glmerControl())
neutral <- glm(hits ~ z_mem *  za ,mid_v,family="binomial")
tab_model(neutral, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
negative  <- glm(hits ~ z_mem * za ,low_v,family="binomial")
tab_model(  negative , show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd")
library("servr")
bookdown::serve_book()
library("servr")
bookdown::serve_book()
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd")
make_tab <- function(isl) {         # function to make the tabs
cat("::: {.panel}\n")             # Open tab
cat("##", isl, "{.panel-name}\n") # Label tab
p <- plot_penguins(isl)           # Create plot
print(p)                          # Display plot
cat("\n")                         # Space
cat(":::\n")                      # Close tab
}
library(tidyverse)
df <- "palmerpenguins"
isl_list <- unique(df$island) %>%   # Get a list of islands present in the dataset
as.character()
library(tidyverse)
df <- palmerpenguins::penguins %>%
filter(island != "Biscoe")
df <- palmerpenguins::penguins %>%
filter(island != "Biscoe")
df <- palmerpenguins
df <- library(palmerpenguins)
data(diamonds)
force(diamonds)
df <- data(diamonds)
tabs <- sort(unique(df$cut))
df <- data(diamonds)
df
data(diamonds)
force(diamonds)
df <- as.data.frame(diamonds)
tabs <- sort(unique(df$cut))
df <- as.data.frame(diamonds)
tabs <- sort(unique(df$cut))
for(tab in tabs) {
cat('\n')
cat('#### ', tab, '   \n')
cat('\n')
plot_values <- diamonds %>% filter(cut == tab)
print(ggplot(plot_values, aes(x = carat)) +
geom_point(aes(y = price, col = color)) +
labs(x = '\nCarat',
y = 'Price (USD $)\n',
col = 'Color') +
theme_bw())
cat('\n')
}
diamonds <- as.data.frame(diamonds)
library(dplyr)
library(ggplot2)
df <- datasets::iris %>%
dplyr::as_tibble()
for (i in c("setosa", "versicolor", "virginica")) {
p <- df %>%
dplyr::filter(Species == i) %>%
ggplot2::ggplot(ggplot2::aes(Sepal.Length, Petal.Length)) +
ggplot2::geom_point()
q <- df %>%
dplyr::filter(Species == i) %>%
ggplot2::ggplot(ggplot2::aes(Sepal.Width, Petal.Width)) +
ggplot2::geom_point()
cat(paste0("\n\n## ", i, "\n"))
cat("#### {.panelset -}\n")
cat("##### Length {-}\n")
cat("##### Width {-}\n")
print(p)
print(q)
}
options(repos = c(CRAN = "https://cran.rstudio.com/"))
#rm(list = ls())
#load libraries
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(tidyverse)
library(hrbrthemes)
#library(viridis)
library(kableExtra)
library(dplyr)
library(viridis)
library(lme4)
library(ggpubr)
library(patchwork)
z <- glmer(hits ~ zrt +za+z_mem+zv+(1|Participant), mem_att, family="binomial")
z <- glmer(hits ~ zrt +za+z_mem+zv+(1|Participant.Private.ID), mem_att, family="binomial")
tab_model(z, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
neutral <- glm(hits ~ z_mem *  za ,mid_v,family="binomial")
tab_model(neutral, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
positive <- glm(hits ~ z_mem *  za ,high_v,family="binomial")
tab_model(positive, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
negative  <- glm(hits ~ z_mem * za ,low_v,family="binomial")
tab_model(  negative , show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
negative  <- glmer(hits ~ z_mem * za +(1|Participant.Private.ID),low_v,family="binomial")
tab_model(  negative , show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
v_slope  <- glmer(hits ~ z_mem * za+zv +(1+zv|Participant.Private.ID),mem_att,family="binomial")
tab_model(  no_slope , show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
v_slope  <- glmer(hits ~ z_mem * za+zv +(1+zv|Participant.Private.ID),mem_att,family="binomial")
tab_model( v_slope , show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
v_slope  <- glmer(hits ~ z_mem * za+zv +(1+zv|Participant.Private.ID),mem_att,family="binomial")
tab_model( v_slope , show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
a_slope  <- glmer(hits ~ z_mem * za+zv +(1+za|Participant.Private.ID),mem_att,family="binomial")
tab_model(a_slope, show.ci = FALSE,show.re.var=FALSE,show.icc=FALSE,show.obs=FALSE)
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd")
sust1 <- read_csv("./delay_data/sust1.csv")
sust1 <- read_csv("./delay_data/delay_batch1/sust1.csv")
delay_sust1 <- read_csv("./delay_data/delay_batch1/sust1.csv")
deay_sust2 <- read_csv("./delay_data/delay_batch1/sust2.csv")
delay_mem1 <- read_csv("./delay_data/delay_batch1/mem1.csv")
delay_mem2 <- read_csv("./delay_data/delay_batch1/mem2.csv")
delay_mem_early2 <- read_csv("./delay_data/mem2_early.csv")
delay_emo1 <-read_csv("./delay_data/delay_batch1/emo1.csv")
delay_emo2 <-read_csv("./delay_data/delay_batch1/emo2.csv")
delay_emo_early2 <- read_csv("./delay_data/emo2_early.csv")
options(repos = c(CRAN = "https://cran.rstudio.com/"))
#rm(list = ls())
#load libraries
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(tidyverse)
library(hrbrthemes)
#library(viridis)
library(kableExtra)
library(dplyr)
library(viridis)
library(lme4)
library(ggpubr)
library(patchwork)
sust <- rbind(delay_sust1,delay_sust2)
delay_sust1 <- read_csv("./delay_data/delay_batch1/sust1.csv")
delay_sust2 <- read_csv("./delay_data/delay_batch1/sust2.csv")
sust <- rbind(delay_sust1,delay_sust2)
memory <- rbind(delay_mem1,delay_mem2,delay_mem_early2)
colnames(delay_mem1) !%in% colnames(delay_mem_early2)
setdiff(colnames(delay_mem1), colnames(delay_mem_early2))
delay_mem1 <- read_csv("./delay_data/delay_batch1/mem1.csv")%>%
select(-c("branch-ck1c","randomiser-8rl3","branch-tpdd"))
delay_mem1 <- read_csv("./delay_data/delay_batch1/mem1.csv")%>%
select(-c("branch-ck1c","randomiser-8rl3","branch-tpdd"))
delay_mem2 <- read_csv("./delay_data/delay_batch1/mem2.csv")%>%
select(-c("branch-ck1c","randomiser-8rl3","branch-tpdd"))
memory <- rbind(delay_mem1,delay_mem2,delay_mem_early2)
emo <- rbind(delay_emo1,delay_emo2,delay_emo_early2)
setdiff(delay_emo1,delay_emo_early2)
setdiff(colnames(delay_emo1),colnames(delay_emo_early2))
delay_emo1 <-read_csv("./delay_data/delay_batch1/emo1.csv")%>%
select(-c("branch-ck1c","randomiser-8rl3","branch-tpdd"))
delay_emo2 <-read_csv("./delay_data/delay_batch1/emo2.csv")%>%
select(-c("branch-ck1c","randomiser-8rl3","branch-tpdd"))
delay_emo_early2 <- read_csv("./delay_data/emo2_early.csv")
emo <- rbind(delay_emo1,delay_emo2,delay_emo_early2)
mem_only <- memory%>%
select(c(Participant.Private.ID,hits,fas,Spreadsheet..img,Trial.Number,Response,Spreadsheet..memory,group))%>%
filter(Spreadsheet..memory=="target")
View(memory)
mem_only <- memory%>%
select(c('Participant Private ID',hits,fas,'Spreadsheet: img','Trial Number',Response,'Spreadsheet: memory',group))%>%
filter(Spreadsheet..memory=="target")
