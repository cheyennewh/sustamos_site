ggplot(memory,aes(x=as.character(Participant.Private.ID),y=APrime,color =as.factor( Participant.Private.ID)))+
geom_point()+
geom_hline(yintercept = 0.50, color="red")+
ylim(0,1)+
theme_ipsum(axis_title_just = "cc",axis_title_size = 12,axis_text_size = 9)+
xlab("Participant")+
ylab("A'")+
scale_color_viridis(option="A",discrete="True")+
labs(color = "Participant",
title="Memory performance (Inclusive)")+
theme(legend.position="none",
axis.text.x = element_blank())
# Assuming 'memory' is your data frame
memory2 <- memory %>%
group_by(Participant.Private.ID) %>%
summarise(total_hits = sum(hits, na.rm = TRUE),
total_miss = sum(miss, na.rm = TRUE),
total_fas = sum(fas, na.rm = TRUE),
total_crs = sum(crs, na.rm = TRUE))
memory_unique <- memory%>%
select(APrime,d_prime,Participant.Private.ID)%>%
unique()
mean(memory$APrime)
View(memory)
memory$hit_rate-memory$false_alarm_rate
mean(memory$hit_rate-memory$false_alarm_rate)
mean(memory$hit_rate)
mean(memory$false_alarm_rate)
ibrary(dplyr)
library(dplyr)
data <- read.csv("/Users/chey/Desktop/mempuzz/pilot_data/tyler_pilot/mem.csv") %>%
filter(Trial.Type != "preload")
library(dplyr)
data <- read.csv("/Users/cheywakelandhart/Desktop/mempuzz/pilot_data/tyler_pilot/mem.csv") %>%
filter(Trial.Type != "preload")
library(dplyr)
data <- read.csv("/Users/cheywakeland-hart/Desktop/mempuzz/pilot_data/tyler_pilot/mem.csv") %>%
filter(Trial.Type != "preload")
# Create the block column
data$block <- rep(1:ceiling(nrow(data) / 3), each = 3)[1:nrow(data)]
data$vig <- NA
# First pass: Assign "filler", "target", "vigilance"
for (i in 1:nrow(data)) {
current_stimulus <- data$Stimulus[i]
# Find the previous occurrences of the current stimulus
previous_indices <- which(data$Stimulus[1:(i - 1)] == current_stimulus)
if (length(previous_indices) > 0) {
# Get the block number of the most recent occurrence
last_index <- tail(previous_indices, 1)
block_difference <- data$block[i] - data$block[last_index]
if (block_difference <= 5) {
data$vig[i] <- "vigilance"
} else if (block_difference <= 150) {
data$vig[i] <- "target"
}
}
# If no previous occurrences, mark as filler
if (is.na(data$vig[i])) {
data$vig[i] <- "filler"
}
}
# Second pass: Adjust vig values for the special stimulus
for (i in 1:nrow(data)) {
if (data$Stimulus[i] == "<div style=\"font-size:60px;\">+</div>") {
# Replace with the previous trial's vig value
if (i > 1) {
data$vig[i] <- data$vig[i - 1]
} else {
data$vig[i] <- "filler"  # Fallback for the first row
}
}
}
data$perf <- NA  #
for (block_num in unique(data$block)) {
block_rows <- which(data$block == block_num)
# Check if there is an 'F' response
has_F_response <- any(data$Response[block_rows] == "f")
has_response <- any(data$Response[block_rows] %in% c("f", "other_valid_response"))
# Get the vig value for the block
vig_value <- data$vig[block_rows[1]]
if (has_F_response) {
if (vig_value == "target") {
data$perf[block_rows] <- "hit"
} else if (vig_value == "vigilance") {
data$perf[block_rows] <- "vighit"
} else if (vig_value == "filler") {
data$perf[block_rows] <- "falsealarm"
}
} else {
# No response case
if (vig_value == "filler") {
data$perf[block_rows] <- "correctr"
} else if (vig_value == "target") {
data$perf[block_rows] <- "miss"
} else if (vig_value == "vigilance") {
data$perf[block_rows] <- "vigmiss"
}
}
}
perf_counts <- data%>%
select(vig,perf,block)%>%
unique()%>%
count(perf) %>%
rename(Count = n)
# Print the counts
print(perf_counts)
View(data)
View(perf_counts)
data_unique <- data%>%
select(vig,perf,block)%>%
unique()
View(data_unique)
library(dplyr)
data <- read.csv("/Users/cheywakeland-hart/Desktop/mempuzz/pilot_data/tyler_pilot/mem.csv") %>%
filter(Trial.Type != "preload")
# Create the block column
data$block <- rep(1:ceiling(nrow(data) / 3), each = 3)[1:nrow(data)]
data$vig <- NA
# First pass: Assign "filler", "target", "vigilance"
for (i in 1:nrow(data)) {
current_stimulus <- data$Stimulus[i]
# Ensure all block 1 rows are "filler"
if (data$block[i] == 1) {
data$vig[i] <- "filler"
next  # Skip the rest of the loop for block 1
}
# Find the previous occurrences of the current stimulus
previous_indices <- which(data$Stimulus[1:(i - 1)] == current_stimulus)
if (length(previous_indices) > 0) {
# Get the block number of the most recent occurrence
last_index <- tail(previous_indices, 1)
block_difference <- data$block[i] - data$block[last_index]
if (block_difference <= 5) {
data$vig[i] <- "vigilance"
} else if (block_difference <= 150) {
data$vig[i] <- "target"
}
}
# If no previous occurrences, mark as filler
if (is.na(data$vig[i])) {
data$vig[i] <- "filler"
}
}
# Second pass: Adjust vig values for the special stimulus
for (i in 1:nrow(data)) {
if (data$Stimulus[i] == "<div style=\"font-size:60px;\">+</div>") {
# Replace with the previous trial's vig value
if (i > 1) {
data$vig[i] <- data$vig[i - 1]
} else {
data$vig[i] <- "filler"  # Fallback for the first row
}
}
}
# Performance assignment logic
data$perf <- NA
for (block_num in unique(data$block)) {
block_rows <- which(data$block == block_num)
# Check if there is an 'F' response
has_F_response <- any(data$Response[block_rows] == "f")
has_response <- any(data$Response[block_rows] %in% c("f", "other_valid_response"))
# Get the vig value for the block
vig_value <- data$vig[block_rows[1]]
if (has_F_response) {
if (vig_value == "target") {
data$perf[block_rows] <- "hit"
} else if (vig_value == "vigilance") {
data$perf[block_rows] <- "vighit"
} else if (vig_value == "filler") {
data$perf[block_rows] <- "falsealarm"
}
} else {
# No response case
if (vig_value == "filler") {
data$perf[block_rows] <- "correctr"
} else if (vig_value == "target") {
data$perf[block_rows] <- "miss"
} else if (vig_value == "vigilance") {
data$perf[block_rows] <- "vigmiss"
}
}
}
# Count performance metrics
perf_counts <- data %>%
select(vig, perf, block) %>%
unique() %>%
count(perf) %>%
rename(Count = n)
# Select unique rows for inspection
data_unique <- data %>%
select(vig, perf, block) %>%
unique()
# Print the counts
print(perf_counts)
length(data$vig[data$vig=="target"])
length(data$vig[data$vig=="vigilance"])
bookdown::clean_book(FALSE)
bookdown::render_book("index.Rmd", quiet = FALSE)
library("servr")
bookdown::serve_book()
bookdown::clean_book(FALSE)
bookdown::render_book("index.Rmd", quiet = FALSE)
library("servr")
bookdown::serve_book()
bookdown::clean_book(FALSE)
bookdown::render_book("index.Rmd", quiet = FALSE)
View(delay_rt_analysis)
View(delay_sust_full_rt)
delay_rt_analysis2 <-delay_sust_full_allt%>%
select(Mean_Reaction_Time,Mean_Window_Scale, Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
filter(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler")
delay_rt_analysis2 <-delay_sust_full_all%>%
select(Mean_Reaction_Time,Mean_Window_Scale, Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
filter(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler")
View(delay_sust_full_all)
delay_rt_analysis2 <-delay_sust_full_all%>%
select(`Reaction Time`,Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
filter(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler")
View(delay_rt_analysis2)
delay_rt_analysis2 <-delay_sust_full_all%>%
select(`Reaction Time`,Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
filter(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler")%>%
mutate(
fill_wind_perfs = ifelse(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler" & Response == "FALSE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_rt_analysis2 <-delay_sust_full_all%>%
select(`Reaction Time`,Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
filter(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler")%>%
mutate(
fill_wind_perfs = ifelse(Response == "FALSE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_rt_analysis2 <-delay_sust_full_all%>%
select(`Reaction Time`,Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
filter(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler")%>%
mutate(
fill_wind_perfs = ifelse(Response == "FALSE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_rt_analysis2$NAs = is.na(fill_wind_perfs)
delay_rt_analysis2 <-delay_sust_full_all%>%
select(`Reaction Time`,Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
filter(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler")%>%
mutate(
fill_wind_perfs = ifelse(Response == "FALSE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_rt_analysis2$NAs = is.na(delay_rt_analysis2$fill_wind_perfs)
delay_rt_analysis2 <- delay_rt_analysis2%>%
mutate(
targ_perf = ifelse(NAs == "TRUE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_rt_analysis2 <-delay_sust_full_all%>%
select(`Reaction Time`,Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
filter(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler")%>%
mutate(
fill_wind_perfs = ifelse(Response == "FALSE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_rt_analysis2$NAs = is.na(delay_rt_analysis2$fill_wind_perfs)
delay_rt_analysis2 <- delay_rt_analysis2%>%
mutate(
fill_wind_perf = ifelse(NAs == "TRUE", "Lapse", "Correct")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_lapse_total2 <- summarise(delay_rt_analysis2, total_lapses2 = sum(fill_wind_perf == "Lapse"))
View(delay_lapse_total2)
delay_laps_tot2<- cbind(delay_lapse_total,delay_lapse_total2)
delay_rt_analysis <-delay_sust_full_rt%>%
select(Mean_Reaction_Time,Mean_Window_Scale, Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
mutate(
targ_perfs = ifelse(`Spreadsheet: type` == "target" & Response == "FALSE", "Lapse", "Correct"),
Mean_Window_Scale = ifelse(`Spreadsheet: type` == "target", mean(Mean_Window_Scale[`Spreadsheet: type` == "window"]), Mean_Window_Scale)
)%>%
filter(`Spreadsheet: type` == "target")
delay_rt_analysis$NAs = is.na(delay_rt_analysis$targ_perfs)
delay_rt_analysis <- delay_rt_analysis%>%
mutate(
targ_perf = ifelse(`Spreadsheet: type` == "target" & NAs == "TRUE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_lapse_total <- summarise(delay_rt_analysis, total_lapses = sum(targ_perf == "Lapse"))
delay_lapse_total <- delay_lapse_total %>%
kable("html") %>%
kable_styling(full_width = FALSE)%>%
scroll_box(width="400px",height = "300px")
delay_lapse_total
delay_rt_analysis2 <-delay_sust_full_all%>%
select(`Reaction Time`,Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
filter(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler")%>%
mutate(
fill_wind_perfs = ifelse(Response == "FALSE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_rt_analysis2$NAs = is.na(delay_rt_analysis2$fill_wind_perfs)
delay_rt_analysis2 <- delay_rt_analysis2%>%
mutate(
fill_wind_perf = ifelse(NAs == "TRUE", "Lapse", "Correct")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_lapse_total2 <- summarise(delay_rt_analysis2, total_lapses2 = sum(fill_wind_perf == "Lapse"))
delay_laps_tot2<- cbind(delay_lapse_total,delay_lapse_total2)
delay_rt_analysis <-delay_sust_full_rt%>%
select(Mean_Reaction_Time,Mean_Window_Scale, Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
mutate(
targ_perfs = ifelse(`Spreadsheet: type` == "target" & Response == "FALSE", "Lapse", "Correct"),
Mean_Window_Scale = ifelse(`Spreadsheet: type` == "target", mean(Mean_Window_Scale[`Spreadsheet: type` == "window"]), Mean_Window_Scale)
)%>%
filter(`Spreadsheet: type` == "target")
delay_rt_analysis$NAs = is.na(delay_rt_analysis$targ_perfs)
delay_rt_analysis <- delay_rt_analysis%>%
mutate(
targ_perf = ifelse(`Spreadsheet: type` == "target" & NAs == "TRUE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_lapse_total <- summarise(delay_rt_analysis, total_lapses = sum(targ_perf == "Lapse"))
delay_rt_analysis2 <-delay_sust_full_all%>%
select(`Reaction Time`,Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
filter(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler")%>%
mutate(
fill_wind_perfs = ifelse(Response == "FALSE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_rt_analysis2$NAs = is.na(delay_rt_analysis2$fill_wind_perfs)
delay_rt_analysis2 <- delay_rt_analysis2%>%
mutate(
fill_wind_perf = ifelse(NAs == "TRUE", "Lapse", "Correct")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_lapse_total2 <- summarise(delay_rt_analysis2, total_lapses2 = sum(fill_wind_perf == "Lapse"))
delay_laps_tot2<- cbind(delay_lapse_total,delay_lapse_total2)
delay_lapse_total2 <- delay_lapse_total2 %>%
kable("html") %>%
kable_styling(full_width = FALSE)%>%
scroll_box(width="400px",height = "300px")
delay_lapse_total
delay_rt_analysis <-delay_sust_full_rt%>%
select(Mean_Reaction_Time,Mean_Window_Scale, Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
mutate(
targ_perfs = ifelse(`Spreadsheet: type` == "target" & Response == "FALSE", "Lapse", "Correct"),
Mean_Window_Scale = ifelse(`Spreadsheet: type` == "target", mean(Mean_Window_Scale[`Spreadsheet: type` == "window"]), Mean_Window_Scale)
)%>%
filter(`Spreadsheet: type` == "target")
delay_rt_analysis$NAs = is.na(delay_rt_analysis$targ_perfs)
delay_rt_analysis <- delay_rt_analysis%>%
mutate(
targ_perf = ifelse(`Spreadsheet: type` == "target" & NAs == "TRUE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_lapse_total <- summarise(delay_rt_analysis, total_lapses = sum(targ_perf == "Lapse"))
delay_rt_analysis2 <-delay_sust_full_all%>%
select(`Reaction Time`,Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
filter(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler")%>%
mutate(
fill_wind_perfs = ifelse(Response == "FALSE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_rt_analysis2$NAs = is.na(delay_rt_analysis2$fill_wind_perfs)
delay_rt_analysis2 <- delay_rt_analysis2%>%
mutate(
fill_wind_perf = ifelse(NAs == "TRUE", "Lapse", "Correct")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_lapse_total2 <- summarise(delay_rt_analysis2, total_lapses2 = sum(fill_wind_perf == "Lapse"))
delay_laps_tot2<- cbind(delay_lapse_total,delay_lapse_total2)
delay_laps_tot2 <- delay_laps_tot2 %>%
kable("html") %>%
kable_styling(full_width = FALSE)%>%
scroll_box(width="400px",height = "300px")
delay_lapse_total
delay_laps_tot2<- cbind(delay_lapse_total,delay_lapse_total2)
View(delay_laps_tot2)
delay_laps_tot2<- cbind(delay_lapse_total,delay_lapse_total2)%>%
select(1,2,4)
delay_laps_tot2 <- delay_laps_tot2 %>%
kable("html") %>%
kable_styling(full_width = FALSE)%>%
scroll_box(width="400px",height = "300px")
delay_lapse_total
delay_laps_tot2<- cbind(delay_lapse_total,delay_lapse_total2)%>%
select(1,2,4)
View(delay_laps_tot2)
delay_laps_tot2<- cbind(delay_lapse_total,delay_lapse_total2)%>%
select(1,2,4)
delay_laps_tot2 <- delay_laps_tot2 %>%
kable("html") %>%
kable_styling(full_width = FALSE)%>%
scroll_box(width="400px",height = "300px")
delay_lapse_tot2
delay_laps_tot2<- cbind(delay_lapse_total,delay_lapse_total2)%>%
select(1,2,4)
delay_laps_tot2 <- delay_laps_tot2 %>%
kable("html") %>%
kable_styling(full_width = FALSE)%>%
scroll_box(width="400px",height = "300px")
delay_laps_tot2
delay_rt_analysis <-delay_sust_full_rt%>%
select(Mean_Reaction_Time,Mean_Window_Scale, Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
mutate(
targ_perfs = ifelse(`Spreadsheet: type` == "target" & Response == "FALSE", "Lapse", "Correct"),
Mean_Window_Scale = ifelse(`Spreadsheet: type` == "target", mean(Mean_Window_Scale[`Spreadsheet: type` == "window"]), Mean_Window_Scale)
)%>%
filter(`Spreadsheet: type` == "target")
delay_rt_analysis$NAs = is.na(delay_rt_analysis$targ_perfs)
delay_rt_analysis <- delay_rt_analysis%>%
mutate(
targ_perf = ifelse(`Spreadsheet: type` == "target" & NAs == "TRUE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_lapse_total <- summarise(delay_rt_analysis, `target errors` = sum(targ_perf == "Lapse"))
delay_rt_analysis2 <-delay_sust_full_all%>%
select(`Reaction Time`,Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
filter(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler")%>%
mutate(
fill_wind_perfs = ifelse(Response == "FALSE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_rt_analysis2$NAs = is.na(delay_rt_analysis2$fill_wind_perfs)
delay_rt_analysis2 <- delay_rt_analysis2%>%
mutate(
fill_wind_perf = ifelse(NAs == "TRUE", "Lapse", "Correct")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
delay_lapse_total2 <- summarise(delay_rt_analysis2, `filler & window errors` = sum(fill_wind_perf == "Lapse"))
delay_laps_tot2<- cbind(delay_lapse_total,delay_lapse_total2)%>%
select(1,2,4)
delay_laps_tot2 <- delay_laps_tot2 %>%
kable("html") %>%
kable_styling(full_width = FALSE)%>%
scroll_box(width="400px",height = "300px")
delay_laps_tot2
rt_analysis <-sust_full_rt%>%
select(Mean_Reaction_Time,Block_Number,Spreadsheet..type,Response, Spreadsheet..img,Participant.Private.ID, Mean_window_scale)%>%
group_by(Block_Number,Participant.Private.ID)%>%
unique()%>%
mutate(
targ_perfs = ifelse(Spreadsheet..type == "target" & Response == "FALSE", "Lapse", "Correct"),
Mean_window_scale = ifelse(Spreadsheet..type == "target", mean(Mean_window_scale[Spreadsheet..type == "window"]), Mean_window_scale)
)%>%
filter(Spreadsheet..type == "target")
rt_analysis$NAs = is.na(rt_analysis$targ_perfs)
rt_analysis <- rt_analysis%>%
mutate(
targ_perf = ifelse(`Spreadsheet..type` == "target" & NAs == "TRUE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant.Private.ID`)
lapse_total <- summarise(delay_rt_analysis, `target errors` = sum(targ_perf == "Lapse"))
rt_analysis2 <- sust_full_all%>%
select(`Reaction Time`,Block_Number,`Spreadsheet: type`,Response, `Spreadsheet: img`,`Participant Private ID`)%>%
group_by(Block_Number,`Participant Private ID`)%>%
unique()%>%
filter(`Spreadsheet: type` == "window"|`Spreadsheet: type` == "filler")%>%
mutate(
fill_wind_perfs = ifelse(Response == "FALSE", "Correct", "Lapse")
)%>%
ungroup()%>%
group_by(`Participant Private ID`)
View(sust_full_rt)
