"0",""
"0","delay_cross_mem_predict <- merge(delay_vamos_aff,delay_mem_only_2, by=""Img"")"
"0",""
"0",""
"0","delay_vamos_aff_use <- delay_vamos_aff[c(1,3,5,6),]"
"0","delay_mem_att <-merge(delay_mem_att,delay_vamos_aff, by=""Img"")%>%"
"0","  ungroup()%>%"
"0","  mutate(zv = scale(Mean_Valence),"
"0","         za = scale(Mean_Arousal))%>%"
"0","  mutate(z_mem = scale(Memorability_Score))"
"0",""
"0","delay_mem_only2 <-merge(delay_mem_only2,delay_vamos_aff, by=""Img"")%>%"
"0","  ungroup()%>%"
"0","  mutate(zv = scale(Mean_Valence),"
"0","         za = scale(Mean_Arousal))%>%"
"0","  mutate(z_mem = scale(Memorability_Score))"
"0",""
"0",""
"0",""
"0",""
"0","delay_mem_att$`Participant Private ID` <- as.factor(delay_mem_att$`Participant Private ID`)"
"0",""
"0",""
"0","# Fit the GLMM model"
"0","delay_model2 <- glmer(hits ~ zrt + (1 +zrt| `Participant Private ID`), family = binomial, data = delay_mem_att)"
"0",""
"0","delay_mem_att_clean <- delay_mem_att %>%"
"0","  filter(!is.na(zrt) & !is.na(hits))"
"0",""
"0","# Create a data frame with predictions"
"0","delay_pred_data2 <- delay_mem_att_clean %>%"
"0","  # Create a new data frame for prediction with original values"
"0","  mutate("
"0","    pred = predict(delay_model2, type = ""response""),"
"0","    se = predict(delay_model2, type = ""link"", se.fit = TRUE)$se.fit"
"0","  )"
"0",""
"0","# Calculate confidence intervals"
"0","delay_pred_data2 <- delay_pred_data2 %>%"
"0","  mutate("
"0","    lwr = pred - 1.96 * se,"
"0","    upr = pred + 1.96 * se"
"0","  )"
"0",""
